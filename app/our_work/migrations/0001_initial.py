# Generated by Django 4.2.7 on 2024-08-06 21:22

from django.db import migrations, models
import django.db.models.deletion
import wagtail.blocks
import wagtail.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailimages', '0025_alter_image_file_alter_rendition_file'),
        ('wagtailcore', '0089_log_entry_data_json_null_to_object'),
    ]

    operations = [
        migrations.CreateModel(
            name='OurWorkPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('programs_title', models.CharField(default='Highlighted Programs')),
                ('programs_description', wagtail.fields.RichTextField(blank=True)),
                ('view_all_programs_text', models.CharField(default='View all programs')),
                ('view_all_programs_link', wagtail.fields.StreamField([('page', wagtail.blocks.PageChooserBlock()), ('url', wagtail.blocks.URLBlock())], blank=True, use_json_field=True)),
                ('highlighted_programs', wagtail.fields.StreamField([('program', wagtail.blocks.PageChooserBlock(page_type=['programs.IndividualProgramPage']))], blank=True, null=True, use_json_field=True)),
                ('projects_title', models.CharField(default='Projects')),
                ('search_keyword_text', models.CharField(default='Search by keyword')),
                ('sort_new_text', models.CharField(default='Sort by New')),
                ('sort_old_text', models.CharField(default='Sort by Old')),
                ('sort_titlea_text', models.CharField(default='Sort by Name Alphabetical')),
                ('sort_titlez_text', models.CharField(default='Sort by Name Reverse Alphabetical')),
                ('filters_text', models.CharField(default='Filters')),
                ('view_grid_text', models.CharField(default='View Grid')),
                ('view_map_text', models.CharField(default='View Map')),
                ('f_impact_areas_text', models.CharField(default='Impact Areas')),
                ('f_open_mapping_hubs_text', models.CharField(default='Open Mapping Hubs')),
                ('f_projects_by_programme_text', models.CharField(default='Projects by Programme')),
                ('f_projects_by_type_text', models.CharField(default='Projects by Type')),
                ('f_project_status_text', models.CharField(default='Project Status')),
                ('f_project_active_text', models.CharField(default='Active')),
                ('f_project_complete_text', models.CharField(default='Complete')),
                ('f_apply_filter_text', models.CharField(default='Apply Filter')),
                ('f_reset_filters_text', models.CharField(default='Reset Filters')),
                ('load_more_projects_text', models.CharField(default='Load More Projects')),
                ('impact_area_title', models.CharField(default='See Projects by Impact Area')),
                ('open_mapping_hub_title', models.CharField(default='See Projects by Open Mapping Hub')),
                ('red_box_title', models.CharField(default="See all of HOT's projects")),
                ('red_box_link_text', models.CharField(default='Explore projects')),
                ('red_box_link', wagtail.fields.StreamField([('page', wagtail.blocks.PageChooserBlock()), ('url', wagtail.blocks.URLBlock())], blank=True, use_json_field=True)),
                ('black_box_title', models.CharField(default='See the many ways to get involved with HOT and open mapping')),
                ('black_box_link_text', models.CharField(default='Get involved')),
                ('black_box_link', wagtail.fields.StreamField([('page', wagtail.blocks.PageChooserBlock()), ('url', wagtail.blocks.URLBlock())], blank=True, use_json_field=True)),
                ('header_image', models.ForeignKey(blank=True, help_text='Header image', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
    ]
